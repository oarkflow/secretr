name: SLSA Go Releaser

on:
  workflow_dispatch:
  release:
    types: [created]

permissions:
  contents: read

jobs:
  build:
    # pick runner per entry in the matrix
    runs-on: ${{ matrix.runs-on }}
    defaults:
      run:
        shell: bash

    permissions:
      id-token: write
      contents: write
      actions: read

    strategy:
      matrix:
        include:
          # macOS builds (macOS)
          - goos: darwin
            goarch: amd64
            distro: app
            runs-on: macos-latest

          # Linux builds (Ubuntu)
          - goos: linux
            goarch: amd64
            distro: deb
            runs-on: ubuntu-latest
          - goos: linux
            goarch: amd64
            distro: rpm
            runs-on: ubuntu-latest

          # Windows build (Windows x64 only)
          - goos: windows
            goarch: amd64
            runs-on: windows-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      # Install GLFW deps only on Ubuntu
      - name: Install system dependencies for GLFW (Ubuntu)
        if: matrix.runs-on == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgl1-mesa-dev \
            xorg-dev \
            libxcursor-dev \
            libxrandr-dev \
            libxinerama-dev \
            libxi-dev \
            libxxf86vm-dev \
            libx11-dev

      - name: Verify go.sum exists
        run: |
          test -f go.sum || (echo "❌ go.sum is missing!" && exit 1)
          echo "✅ go.sum found"

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.2

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: go-mod-${{ runner.os }}-v3-${{ hashFiles('go.sum') }}
          restore-keys: |
            go-mod-${{ runner.os }}-v3-

      - name: Build vault using build.sh
        run: |
          chmod +x ./build.sh
          ./build.sh
        env:
          PLATFORMS: ${{ matrix.goos }}
          ARCHS: ${{ matrix.goarch }}
          PACKAGE: "true"
          DISTRO: ${{ matrix.distro }}

      - name: Publish binaries to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            bin/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
